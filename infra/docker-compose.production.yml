version: '3'

services:

  db:
    container_name: foodgram_db
    image: postgres:13.0-alpine
    env_file: .env
    volumes:
      - pg_data_production_food:/var/lib/postgresql/data/
    restart: always

  backend:
    container_name: foodgram_backend
    image: axeunder/foodgram_backend:latest
    env_file: .env
    volumes:
      - static_volume_food:/backend_static/
      - media_volume_food:/backend_media/
    depends_on:
      - db
    restart: always

  frontend:
    container_name: foodgram_frontend
    image: axeunder/foodgram_frontend:latest
    env_file: .env
    command: cp -r /app/build/. /frontend_static/
    volumes:
      - static_volume_food:/frontend_static/

  certbot:
    container_name: foodgram_certbot
    image: certbot/certbot
    volumes:
      - certbot_etc:/etc/letsencrypt/
      - certbot_var:/var/lib/letsencrypt/
      - ./infra/ssl-dhparams.pem:/ssl-dhparams.pem
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always

  gateway:
    container_name: foodgram_gateway
    image: nginx:1.19.3
    ports:
      - "8080:443"
    volumes:
      - ../infra/nginx.production.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume_food:/staticfiles/
      - media_volume_food:/backend_media/
      - certbot_etc:/etc/letsencrypt
      - certbot_var:/var/lib/letsencrypt
    depends_on:
      - backend
      - frontend
      - certbot
    restart: always

volumes:
  pg_data_production_food:
  static_volume_food:
  media_volume_food:
  certbot_etc:
  certbot_var: